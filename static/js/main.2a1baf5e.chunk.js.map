{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerID","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","nameLog","document","addEventListener","event","contextMenuHandler","preventDefault","onClick","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAC1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAXP,gCAcE,SAAmBC,GACbA,EAAUC,YAAcT,KAAKU,MAAMD,WACrCL,QAAQO,MAAR,uBACkBH,EAAUC,UAD5B,eAC4CT,KAAKU,MAAMD,cAjB7D,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,WAvB9B,oBA0BE,WACE,IACEU,EACET,KAAKU,MADPD,UAIAZ,EACEG,KAAKJ,MADPC,KAGF,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YA5C1C,GAA2BO,aCF3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAGX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBa,UAAW,UACXW,UAAU,GAHd,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxC,EAAKC,qBACLD,EAAME,oBAGRJ,SAASC,iBAAiB,QAASvB,KAAK2B,SAExCzB,aAAY,WACV,EAAKC,SAAS,CACZM,UAAWM,QAEZ,QApBP,kCAuBE,WACEO,SAASM,oBAAoB,cAAe5B,KAAKyB,oBACjDH,SAASM,oBAAoB,QAAS5B,KAAK2B,SAC3C1B,OAAOW,cAAcZ,KAAKqB,WA1B9B,qBA6BE,WACErB,KAAKG,SAAS,CAAEiB,UAAU,MA9B9B,gCAiCE,WACEpB,KAAKG,SAAS,CAAEiB,UAAU,MAlC9B,oBAqCE,WACE,MAGIpB,KAAKJ,MAFPa,EADF,EACEA,UACAW,EAFF,EAEEA,SAGF,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOX,UAAWA,WA9CvC,GAAyBK,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.2a1baf5e.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component, ReactNode } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerID = 0;\n\n  componentDidMount() {\n    this.timerID = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.debug(\n        `Renamed from ${prevProps.clockName} to ${this.props.clockName}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerID);\n  }\n\n  render(): ReactNode {\n    const {\n      clockName,\n    } = this.props;\n\n    const {\n      date,\n    } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import './App.scss';\nimport { Component, ReactNode } from 'react';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  nameLog = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      this.contextMenuHandler();\n      event.preventDefault();\n    });\n\n    document.addEventListener('click', this.onClick);\n\n    setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.contextMenuHandler);\n    document.removeEventListener('click', this.onClick);\n    window.clearInterval(this.nameLog);\n  }\n\n  onClick() {\n    this.setState({ hasClock: true });\n  }\n\n  contextMenuHandler() {\n    this.setState({ hasClock: false });\n  }\n\n  render(): ReactNode {\n    const {\n      clockName,\n      hasClock,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}